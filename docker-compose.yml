version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 3003:3003
    # environment:
    #   - NODE_ENV=production
    #   - POSTGRES_PORT=${POSTGRES_PORT}
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - pgsql
    networks:
      - ft_transcendence
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - ft_transcendence
    restart: always

  pgsql:
    # build:
    #   context: ./db
    #   dockerfile: Dockerfile
    image: postgres:alpine
    container_name: 'pgsql'
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - ft_transcendence
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

networks:
  ft_transcendence:
    driver: bridge

volumes:
  pg-data:
